import 'dart:io';
import 'package:delivery_pizza_app/pages/Ggmap.dart';
import 'package:delivery_pizza_app/pages/edit_profile.dart';
import 'package:delivery_pizza_app/pages/order_history.dart';
import 'package:delivery_pizza_app/pages/wishlist.dart';
import 'package:delivery_pizza_app/service/auth.dart';
import 'package:delivery_pizza_app/service/shared_pref.dart';
import 'package:delivery_pizza_app/widget_support/widget_support.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:firebase_storage/firebase_storage.dart';
import 'package:flutter/material.dart';
import 'package:flutter_rating_bar/flutter_rating_bar.dart';
import 'package:image_picker/image_picker.dart';
import 'package:mailer/mailer.dart';
import 'package:mailer/smtp_server/gmail.dart';
import 'package:random_string/random_string.dart';
import 'package:delivery_pizza_app/pages/login.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:url_launcher/url_launcher.dart';

class Profile extends StatefulWidget {
  const Profile({super.key});

  @override
  State<Profile> createState() => _ProfileState();
}

class _ProfileState extends State<Profile> {
  double _rating = 0.0;
  String? profile, name, email, phone, address;
  final ImagePicker _picker = ImagePicker();
  File? selectedImage;

  // final List<Map<String, dynamic>> wishlist;
  // Profile({required this.wishlist});

  Future<void> getImage() async {
    var image = await _picker.pickImage(source: ImageSource.gallery);

    if (image != null) {
      selectedImage = File(image.path);
      setState(() {
        uploadItem();
      });
    } else {
      // X·ª≠ l√Ω khi ng∆∞·ªùi d√πng kh√¥ng ch·ªçn ·∫£nh
      print("üìå Ng∆∞·ªùi d√πng ch∆∞a ch·ªçn ·∫£nh!");
    }
  }

  uploadItem() async {
    if (selectedImage != null) {
      String addId = randomAlphaNumeric(10);

      Reference firebaseStorageRef =
          FirebaseStorage.instance.ref().child("blogImages").child(addId);
      final UploadTask task = firebaseStorageRef.putFile(selectedImage!);

      var downLoadUrl = await (await task).ref.getDownloadURL();

      await SharedPreferenceHelper().saveUserProfile(downLoadUrl);

      // Ki·ªÉm tra xem widget c√≤n mounted hay kh√¥ng tr∆∞·ªõc khi g·ªçi setState()
      if (mounted) {
        setState(() {});
      }
    }
  }

  getthesharepref() async {
    profile = await SharedPreferenceHelper().getUserProfile();
    name = await SharedPreferenceHelper().getUserName();
    email = await SharedPreferenceHelper().getUserEmail();
    phone = await SharedPreferenceHelper().getUserPhone();
    address = await SharedPreferenceHelper().getUserAddress();

    setState(() {});
  }

  ontheload() async {
    await getthesharepref();
    setState(() {});
  }

  @override
  void initState() {
    ontheload();
    super.initState();
  }

  // ms th√™m
  @override
  void dispose() {
    super.dispose();
  }

  // H√†m m·ªü li√™n k·∫øt URL
  Future<void> _launchURL(String url) async {
    final Uri uri = Uri.parse(url); // Chuy·ªÉn chu·ªói URL th√†nh ƒë·ªëi t∆∞·ª£ng Uri
    try {
      if (await canLaunchUrl(uri)) {
        // Ki·ªÉm tra kh·∫£ nƒÉng m·ªü URL
        await launchUrl(uri); // M·ªü URL
      } else {
        throw 'üò• Kh√¥ng th·ªÉ m·ªü li√™n k·∫øt: $url'; // N√©m l·ªói n·∫øu kh√¥ng m·ªü ƒë∆∞·ª£c
      }
    } catch (e) {
      print(e.toString());
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('üò• Kh√¥ng th·ªÉ m·ªü li√™n k·∫øt, vui l√≤ng th·ª≠ l·∫°i!')),
      );
    }
  }

  // Ph∆∞∆°ng th·ª©c g·ª≠i email
  Future<void> sendEmail(double rating) async {
    // C·∫•u h√¨nh th√¥ng tin ƒëƒÉng nh·∫≠p v√†o Gmail v√† s·ª≠ d·ª•ng m·∫≠t kh·∫©u ·ª©ng d·ª•ng
    final smtpServer = gmail('thinhyone@gmail.com', 'mrqr czhh fcus buct');

    // T·∫°o ƒë·ªëi t∆∞·ª£ng email
    final message = Message()
      ..from = Address(email!, name!)
      ..recipients.add('hthin217@gmail.com') // ƒê·ªãa ch·ªâ admin
      //..recipients.add('nhattan.9a7@gmail.com') // ƒê·ªãa ch·ªâ admin
      ..subject = 'ƒê√°nh gi√° d·ªãch v·ª•'
      ..text = 'ƒê√°nh gi√° c·ªßa kh√°ch h√†ng: $rating sao';

    try {
      // G·ª≠i email
      final sendReport = await send(message, smtpServer);
      print('ü•∞ ƒê√£ g·ª≠i email th√†nh c√¥ng: ${sendReport.toString()}');
    } catch (e) {
      print('üò• L·ªói khi g·ª≠i email: $e');
    }
  }

  Widget _buildInfoTile(IconData icon, String title, String subtitle) {
    return Container(
      padding: EdgeInsets.all(20),
      margin: EdgeInsets.symmetric(horizontal: 20, vertical: 10),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(10),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.1),
            blurRadius: 8,
            offset: Offset(0, 2),
          ),
        ],
      ),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          // N·ªôi dung b√™n tr√°i: Icon v√† Text
          Row(
            children: [
              Icon(
                icon,
                size: 25,
                color: Colors.black,
              ),
              SizedBox(width: 20),
              Text(
                title,
                style: TextStyle(
                  fontSize: 16,
                  fontWeight: FontWeight.w600,
                  color: Colors.black,
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildContact(IconData icon, String title, String subtitle) {
    return Container(
      padding: EdgeInsets.all(20),
      margin: EdgeInsets.symmetric(horizontal: 20, vertical: 10),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(10),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.1),
            blurRadius: 8,
            offset: Offset(0, 2),
          ),
        ],
      ),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          // N·ªôi dung b√™n tr√°i: Icon v√† Text
          Row(
            children: [
              Icon(
                icon,
                size: 25,
                color: Colors.black,
              ),
              SizedBox(width: 20),
              Text(
                title,
                style: TextStyle(
                  fontSize: 16,
                  fontWeight: FontWeight.w600,
                  color: Colors.black,
                ),
              ),
            ],
          ),
          // N·ªôi dung b√™n ph·∫£i: Bi·ªÉu t∆∞·ª£ng Facebook v√† Google
          Row(
            children: [
              IconButton(
                icon: Icon(Icons.facebook, size: 40, color: Colors.blue),
                onPressed: () {
                  _launchURL(
                      'https://www.facebook.com/PizzaHutVN'); // M·ªü link Facebook
                },
              ),
              IconButton(
                icon: Icon(Icons.play_circle, size: 40, color: Colors.red),
                onPressed: () {
                  _launchURL('https://youtube.com'); // M·ªü link Google
                },
              ),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildRatingTile(
      String title, double rating, Function(double) onRatingChanged) {
    return Container(
      padding: EdgeInsets.all(20),
      margin: EdgeInsets.symmetric(horizontal: 20, vertical: 10),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(10),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.1),
            blurRadius: 8,
            offset: Offset(0, 2),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          // Ti√™u ƒë·ªÅ ƒë√°nh gi√° d·ªãch v·ª•
          Text(
            title,
            style: TextStyle(
              fontSize: 16,
              fontWeight: FontWeight.bold,
            ),
          ),
          SizedBox(height: 10),
          // RatingBar
          RatingBar.builder(
            initialRating: rating,
            minRating: 1,
            direction: Axis.horizontal,
            allowHalfRating: true,
            itemCount: 5,
            itemBuilder: (context, _) => Icon(
              Icons.star,
              color: Colors.amber,
            ),
            onRatingUpdate: onRatingChanged,
          ),
        ],
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: name == null
          ? Center(child: CircularProgressIndicator())
          : CustomScrollView(
              slivers: [
                SliverAppBar(
                  automaticallyImplyLeading: false, // ·∫®n n√∫t Back
                  expandedHeight: 200,
                  pinned: true,
                  flexibleSpace: FlexibleSpaceBar(
                    background: Container(
                      decoration: BoxDecoration(
                        color: Colors.black,
                        borderRadius: BorderRadius.vertical(
                          bottom: Radius.elliptical(
                              MediaQuery.of(context).size.width, 105),
                        ),
                      ),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          SizedBox(height: 30),
                          // Material(
                          //   elevation: 10,
                          //   borderRadius: BorderRadius.circular(60),
                          //   child: ClipRRect(
                          //     borderRadius: BorderRadius.circular(60),
                          //     child: selectedImage == null
                          //         ? GestureDetector(
                          //             onTap: () {
                          //               getImage();
                          //             },
                          //             child: profile == null
                          //                 ? Image.asset(
                          //                     "images/logo4.png",
                          //                     height: 120,
                          //                     width: 120,
                          //                     fit: BoxFit.cover,
                          //                   )
                          //                 : Image.network(
                          //                     profile!,
                          //                     height: 120,
                          //                     width: 120,
                          //                     fit: BoxFit.cover,
                          //                   ),
                          //           )
                          //         : Image.file(
                          //             selectedImage!,
                          //             height: 120,
                          //             width: 120,
                          //             fit: BoxFit.cover,
                          //           ),
                          //   ),
                          // ),
                          Material(
                            elevation: 10,
                            borderRadius: BorderRadius.circular(60),
                            child: ClipRRect(
                              borderRadius: BorderRadius.circular(60),
                              child: GestureDetector(
                                onTap: () async {
                                  await getImage(); // G·ªçi h√†m ƒë·ªÉ l·∫•y ·∫£nh
                                  if (selectedImage != null) {
                                    // Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
                                    ScaffoldMessenger.of(context).showSnackBar(
                                      SnackBar(
                                        content: Text(
                                          "‚úî C·∫≠p nh·∫≠t ·∫£nh th√†nh c√¥ng!",
                                          style: TextStyle(color: Colors.white),
                                        ),
                                        backgroundColor: Colors.green,
                                        duration: Duration(seconds: 3),
                                      ),
                                    );
                                  }
                                },
                                child: selectedImage == null
                                    ? (profile == null
                                        ? Image.asset(
                                            "images/logo4.png",
                                            height: 120,
                                            width: 120,
                                            fit: BoxFit.cover,
                                          )
                                        : Image.network(
                                            profile!,
                                            height: 120,
                                            width: 120,
                                            fit: BoxFit.cover,
                                          ))
                                    : Image.file(
                                        selectedImage!,
                                        height: 120,
                                        width: 120,
                                        fit: BoxFit.cover,
                                      ),
                              ),
                            ),
                          ),
                          SizedBox(height: 10),
                          Text(
                            name!,
                            style: TextStyle(
                                color: Colors.white,
                                fontSize: 25,
                                fontWeight: FontWeight.bold,
                                fontFamily: "BalooPaaji2"),
                          ),
                        ],
                      ),
                    ),
                  ),
                ),
                SliverList(
                  delegate: SliverChildListDelegate([
                    // S·ª≠a l·∫°i ph·∫ßn GestureDetector cho "Th√¥ng tin c√° nh√¢n"
                    GestureDetector(
                      onTap: () {
                        Navigator.push(
                          context,
                          MaterialPageRoute(
                              builder: (context) => EditProfile(
                                    name: name!,
                                    email: email!,
                                    phone: phone!,
                                    address: address!,
                                  )),
                        );
                      },
                      child: _buildInfoTile(
                          Icons.contact_mail_outlined, "Th√¥ng tin c√° nh√¢n", ""),
                    ),
                    GestureDetector(
                      onTap: () {
                        Navigator.push(
                            context,
                            MaterialPageRoute(
                                builder: (context) => Wishlist()));
                      },
                      child: _buildInfoTile(
                          Icons.favorite, "Danh s√°ch s·∫£n ph·∫©m y√™u th√≠ch", ""),
                    ),
                    GestureDetector(
                      onTap: () {
                        Navigator.push(context,
                            MaterialPageRoute(builder: (context) => Ggmap()));
                      },
                      child: _buildInfoTile(
                          Icons.local_shipping, "Theo d√µi ƒë∆°n h√†ng", ""),
                    ),
                    GestureDetector(
                      onTap: () {
                        Navigator.push(
                          context,
                          MaterialPageRoute(
                              builder: (context) => OrderHistory()),
                        );
                      },
                      child:
                          _buildInfoTile(Icons.history, "L·ªãch s·ª≠ ƒë∆°n h√†ng", ""),
                    ),
                    _buildRatingTile(
                      "ƒê√°nh gi√° d·ªãch v·ª•",
                      _rating,
                      (rating) {
                        showDialog(
                          context: context,
                          builder: (BuildContext context) {
                            return AlertDialog(
                              title: Text("X√°c nh·∫≠n"),
                              content: Text("B·∫°n mu·ªën g·ª≠i ƒë√°nh gi√°?"),
                              actions: [
                                TextButton(
                                  onPressed: () {
                                    Navigator.of(context)
                                        .pop(); // ƒê√≥ng dialog, kh√¥ng th·ª±c hi·ªán g√¨ c·∫£
                                  },
                                  child: Text("Kh√¥ng",
                                      style: AppWidget.semiBoldTextFieldStyle()
                                          .copyWith(color: Colors.red)),
                                ),
                                TextButton(
                                  onPressed: () {
                                    // Th·ª±c hi·ªán c·∫≠p nh·∫≠t rating v√† g·ª≠i email
                                    setState(() {
                                      _rating = rating;
                                    });

                                    ScaffoldMessenger.of(context).showSnackBar(
                                      SnackBar(
                                        backgroundColor: Colors.green,
                                        content: Text(
                                          "C·∫£m ∆°n b·∫°n g·ª≠i ƒë√°nh gi√° cho ch√∫ng t√¥i ü•∞",
                                          style:
                                              AppWidget.semiBoldTextFieldStyle()
                                                  .copyWith(
                                            color: Colors.white,
                                          ),
                                        ),
                                      ),
                                    );

                                    sendEmail(
                                        rating); // G·ªçi h√†m sendEmail sau khi x√°c nh·∫≠n

                                    Navigator.of(context).pop(); // ƒê√≥ng dialog
                                  },
                                  child: Text("C√≥",
                                      style: AppWidget.semiBoldTextFieldStyle()
                                          .copyWith(color: Colors.blueAccent)),
                                ),
                              ],
                            );
                          },
                        );
                      },
                    ),

                    GestureDetector(
                      onTap: () async {
                        bool confirmDelete = await showDialog(
                          context: context,
                          builder: (context) => AlertDialog(
                            title: Text("X√°c nh·∫≠n"),
                            content: Text("B·∫°n mu·ªën x√≥a t√†i kho·∫£n?"),
                            actions: [
                              TextButton(
                                onPressed: () => Navigator.of(context)
                                    .pop(false), // 'No' button
                                child: Text(
                                  "Kh√¥ng",
                                  style: AppWidget.semiBoldTextFieldStyle()
                                      .copyWith(color: Colors.blueAccent),
                                ),
                              ),
                              TextButton(
                                onPressed: () => Navigator.of(context)
                                    .pop(true), // 'Yes' button
                                child: Text(
                                  "C√≥",
                                  style: AppWidget.semiBoldTextFieldStyle()
                                      .copyWith(color: Colors.red),
                                ),
                              ),
                            ],
                          ),
                        );

                        if (confirmDelete == true) {
                          await AuthMethods()
                              .DeleteUser(); // Replace with actual delete account method
                          ScaffoldMessenger.of(context).showSnackBar(
                            SnackBar(
                                backgroundColor: Colors.green,
                                content: Text(
                                  "‚úî X√≥a t√†i kho·∫£n th√†nh c√¥ng",
                                  style: AppWidget.semiBoldTextFieldStyle(),
                                )),
                          );
                          Navigator.pushReplacement(
                            context,
                            MaterialPageRoute(builder: (context) => Login()),
                          );
                        }
                      },
                      child: _buildInfoTile(Icons.delete, "X√≥a t√†i kho·∫£n", ""),
                    ),
                    GestureDetector(
                      onTap: () async {
                        bool confirmXoa = await showDialog(
                          context: context,
                          builder: (context) => AlertDialog(
                            title: Text("X√°c nh·∫≠n"),
                            content: Text("B·∫°n mu·ªën ƒëƒÉng xu·∫•t t√†i kho·∫£n?"),
                            actions: [
                              TextButton(
                                onPressed: () => Navigator.of(context)
                                    .pop(false), // 'No' button
                                child: Text(
                                  "Kh√¥ng",
                                  style: AppWidget.semiBoldTextFieldStyle()
                                      .copyWith(color: Colors.blueAccent),
                                ),
                              ),
                              TextButton(
                                onPressed: () => Navigator.of(context)
                                    .pop(true), // 'Yes' button
                                child: Text(
                                  "C√≥",
                                  style: AppWidget.semiBoldTextFieldStyle()
                                      .copyWith(color: Colors.red),
                                ),
                              ),
                            ],
                          ),
                        );

                        if (confirmXoa == true) {
                          // ƒêƒÉng xu·∫•t Firebase
                          await AuthMethods().SignOut();

                          // Quay l·∫°i m√†n h√¨nh ƒëƒÉng nh·∫≠p
                          Navigator.pushReplacement(
                            context,
                            MaterialPageRoute(builder: (context) => Login()),
                          );
                          ScaffoldMessenger.of(context).showSnackBar(
                            SnackBar(
                              backgroundColor: Colors.green,
                              content: Text(
                                'ü•∞ ƒêƒÉng xu·∫•t th√†nh c√¥ng',
                                style: AppWidget.semiBoldTextFieldStyle(),
                              ),
                            ),
                          );
                        }
                      },
                      child: _buildInfoTile(Icons.logout, "ƒêƒÉng xu·∫•t", ""),
                    ),
                    _buildContact(Icons.connect_without_contact,
                        "Li√™n h·ªá v·ªõi Pizza Hut", ""),
                  ]),
                ),
              ],
            ),
    );
  }
}
